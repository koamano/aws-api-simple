name: aws-api-simple

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Setup .Net
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 6.0.x
      
#       - name: step 2 - Add artifacts to publish to the temp folder
#         run: |
#           mkdir artifact
#           cd artifact
#           mkdir publish
#           cd publish
#           echo 'alpha'    > alpha.html
#           echo 'bravo'    > bravo.html
#           echo 'charlie'  > charlie.html
#           cd ..
#           cd ..
      
      - name: Publish
        run: dotnet publish --no-self-contained --runtime linux-x64 --configuration Release --output ./artifact/publish ./src/aws-api-simple/aws-api-simple.csproj
      
      - name: Install zip
        uses: montudor/action-zip@v1
        
      - name: debug
        run : echo echo "$PWD"
      
      - name: Zip output
        run: zip -qq -r ../lambda.zip . 
        working-directory: artifact/publish
        
      - name: Copy Cloudformation Template
        run: cp ./deployment.yaml ./artifact/deployment.yaml
      
      - uses: actions/upload-artifact@v3
        with:
          name: lambda
          path: ./artifact
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
          
      - name: Upload to S3
        run: aws s3 cp ./artifact/lambda.zip s3://koamano-s3

  sandbox-deploy:
    runs-on: ubuntu-latest
    environment: sandbox
    needs: build
    
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: lambda
          path: artifact
          
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2   
    
      - name: Deploy to AWS CloudFormation
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: cloudformation-sandbox
          template: artifact/deployment.yaml
          parameter-overrides: "Environment=Sandbox"
          
  nonprod-deploy:
    runs-on: ubuntu-latest
    environment: nonprod
    needs: [build, sandbox-deploy]
    
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: lambda
          path: artifact
          
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2   
    
      - name: Deploy to AWS CloudFormation
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: cloudformation-nonprod
          template: artifact/deployment.yaml
          parameter-overrides: "Environment=nonprod"       
